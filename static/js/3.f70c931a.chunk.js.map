{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/WithAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","dialog","active","to","id","name","Message","message","MessageForm","onSubmit","values","onAddMessage","render","handleSubmit","validate","composeValidators","requiredField","maxLengthCreator","component","Textarea","placeholder","type","Dialogs","dialogs","dialogsItem","dialogsData","map","u","messages","formData","console","log","messageBody","addMessage","mapStateToPropsForRedirecct","state","isAuth","auth","compose","connect","dialogPage","newMessageText","dispatch","addMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,sGCW9JC,EARI,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACI,cAAC,IAAD,CAASC,GAAE,mBAAcL,EAAMM,IAA/B,SAAsCN,EAAMO,UCAzCC,EAJC,SAACR,GACb,OAAO,qBAAKC,UAAU,UAAf,SAA0BD,EAAMS,W,yBC+BrCC,EAAc,SAACV,GACjB,OACI,cAAC,IAAD,CACIW,SAAU,SAAAC,GAAWZ,EAAMa,aAAaD,IACxCE,OAAQ,gBAAEC,EAAF,EAAEA,aAAF,OACJ,uBAAMJ,SAAUI,EAAhB,UACI,8BACI,cAAC,IAAD,CAAOC,SAAUC,YAAkBC,IAAeC,YAAiB,KAC5DZ,KAAM,cACNa,UAAWC,IACXC,YAAa,oBAGxB,8BACI,wBAAQC,KAAK,SAAb,kCAOTC,EA/CC,SAACxB,GASb,OACI,sBAAKC,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAEwB,YAAlB,SACK1B,EAAM2B,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYtB,KAAMsB,EAAEtB,KAAMD,GAAIuB,EAAEvB,IAASuB,EAAEvB,SAE3E,sBAAKL,UAAWC,IAAE4B,SAAlB,UACI,8BACI,cAAC,EAAD,CAAajB,aAdV,SAACkB,GAChBC,QAAQC,IAAIF,EAASG,aACrBlC,EAAMmC,WAAWJ,EAASG,kBAcjBlC,EAAM8B,SAASF,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAASpB,QAASoB,EAAEpB,SAAcoB,EAAEvB,c,uDCvBzE8B,EAA8B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKD,S,QCkBRE,sBACXC,aAhBkB,SAACJ,GACnB,MAAM,CACFV,YAAaU,EAAMK,WAAWf,YAC9BgB,eAAgBN,EAAMK,WAAWC,eACjCb,SAASO,EAAMK,WAAWZ,aAGT,SAACc,GACtB,MAAM,CACFT,WAAY,SAACD,GACVU,EAASC,YAAwBX,UDVZ,SAACY,GAAc,IAErCC,EAFoC,uKAIlC,OAAKC,KAAKhD,MAAMsC,OACT,cAACQ,EAAD,eAAeE,KAAKhD,QADI,cAAC,IAAD,CAAUK,GAAG,eAJV,GAEV4C,IAAMH,WAUtC,OAFiCL,YAAQL,EAARK,CAAqCM,KCK3DP,CAGbhB","file":"static/js/3.f70c931a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__30TLp\",\"dialogsItem\":\"Dialogs_dialogsItem__b1jFD\",\"dialog\":\"Dialogs_dialog__wVirT\",\"active\":\"Dialogs_active__1G6Dm\",\"messages\":\"Dialogs_messages__iriqL\"};","import React from \"react\";\r\nimport s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) =>{\r\n    return(\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\n\r\n\r\nconst Message = (props) =>{\r\n    return <div className=\"message\">{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Form, Field} from 'react-final-form'\r\nimport {Textarea} from \"../Common/FormsControl/formsControl\";\r\nimport {composeValidators, maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let onAddMessage = (formData) => {\r\n        console.log(formData.messageBody);\r\n        props.addMessage(formData.messageBody);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {props.dialogsData.map(u => <DialogItem name={u.name} id={u.id} key={u.id}/>)}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>\r\n                    <MessageForm onAddMessage={onAddMessage}/>\r\n                </div>\r\n                {props.messages.map(u => <Message message={u.message} key={u.id}/>)}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <Form\r\n            onSubmit={values => {props.onAddMessage(values);}}\r\n            render={({handleSubmit}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field validate={composeValidators(requiredField, maxLengthCreator(20))}\r\n                               name={'messageBody'}\r\n                               component={Textarea}\r\n                               placeholder={'enter message'}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"submit\" >Add message</button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        />\r\n    )\r\n}\r\nexport default Dialogs","import React from 'react'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirecct = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) =>{\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirecct)(RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent\r\n}","// import React from \"react\";\r\nimport {addMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return{\r\n        dialogsData: state.dialogPage.dialogsData,\r\n        newMessageText: state.dialogPage.newMessageText,\r\n        messages:state.dialogPage.messages,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        addMessage: (messageBody)=> {\r\n           dispatch(addMessageActionCreator(messageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}